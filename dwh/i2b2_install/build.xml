<?xml version="1.0" encoding="UTF-8"?>
<!--
$Id: data_build.xml,v 1.2 2010/04/05 13:52:11 lcp5 Exp $
-->
<project name="AKTIN DWH" basedir=".">

    <property file="build.properties"/>
	<property environment="env" />

	<!-- =================================================================== -->
	<!-- 								INIT 								 -->
	<!-- =================================================================== -->
	<target name="init"  description="init">
		<!-- TODO don't copy the psql driver, just use the patheleement -->
		<copy file="${packages.dir}/postgresql-9.2-1002.jdbc4.jar" todir="${ant.installdata.dir}" />
		<path id="classpath">
			<pathelement location="postgresql-9.2-1002.jdbc4.jar"/>
		</path>
	</target>  
    <target name="get_packages" unless="${packages.dir.noload}">
        <get src="https://cloudstorage.uni-oldenburg.de/index.php/s/84p6lgOCbkI5nbw/download" dest="${base.dir}/p.zip"/>
        <unzip src="${base.dir}/p.zip" dest="${base.dir}" overwrite="false"/>
        <delete file="${base.dir}/p.zip"/>
    </target>


    <!-- =================================================================== -->
    <!--     Change properties                                               -->
    <!-- =================================================================== -->
    
    
    <!-- TODO don't change files in git folders. Use a temporary folder outside of the git repo. -->
    
    <target name="copy_files" depends="init">
        <echo message="change propertie files and sql"/>
        <copy file="${ant.installdata.dir}/${dbuser.dir}/scripts/create_POSTGRESQL_users.sql.orig" tofile="${ant.installdata.dir}/${dbuser.dir}/scripts/create_POSTGRESQL_users.sql" overwrite="true"/>
        <copy file="${ant.installdata.dir}/${hive.dir}/db.properties.orig" tofile="${ant.installdata.dir}/${hive.dir}/db.properties" overwrite="true"/>
        <copy file="${ant.installdata.dir}/${pm.dir}/db.properties.orig" tofile="${ant.installdata.dir}/${pm.dir}/db.properties" overwrite="true"/>
        <copy file="${ant.installdata.dir}/${work.dir}/db.properties.orig" tofile="${ant.installdata.dir}/${work.dir}/db.properties" overwrite="true"/>
        <copy file="${ant.installdata.dir}/${meta.dir}/db.properties.orig" tofile="${ant.installdata.dir}/${meta.dir}/db.properties" overwrite="true"/>
        <copy file="${ant.installdata.dir}/${crc.dir}/db.properties.orig" tofile="${ant.installdata.dir}/${crc.dir}/db.properties" overwrite="true"/>


        <copy file="${ant.installdata.dir}/jboss_xml_ds/crc-ds.xml.orig" tofile="${ant.installdata.dir}/jboss_xml_ds/crc-ds.xml" overwrite="true"/>
        <copy file="${ant.installdata.dir}/jboss_xml_ds/ont-ds.xml.orig" tofile="${ant.installdata.dir}/jboss_xml_ds/ont-ds.xml" overwrite="true"/>
        <copy file="${ant.installdata.dir}/jboss_xml_ds/pm-ds.xml.orig" tofile="${ant.installdata.dir}/jboss_xml_ds/pm-ds.xml" overwrite="true"/>
        <copy file="${ant.installdata.dir}/jboss_xml_ds/work-ds.xml.orig" tofile="${ant.installdata.dir}/jboss_xml_ds/work-ds.xml" overwrite="true"/>


        <copy file="${ant.installdata.dir}/jboss_config/crcapp/crc.properties.orig" tofile="${ant.installdata.dir}/jboss_config/crcapp/crc.properties" overwrite="true"/>
        <copy file="${ant.installdata.dir}/jboss_config/crcapp/CRCLoaderApplicationContext.xml.orig" tofile="${ant.installdata.dir}/jboss_config/crcapp/CRCLoaderApplicationContext.xml" overwrite="true"/>
        <copy file="${ant.installdata.dir}/jboss_config/crcapp/edu.harvard.i2b2.crc.loader.properties.orig" tofile="${ant.installdata.dir}/jboss_config/crcapp/edu.harvard.i2b2.crc.loader.properties" overwrite="true"/>

        <copy file="${ant.installdata.dir}/jboss_config/ontologyapp/ontology.properties.orig" tofile="${ant.installdata.dir}/jboss_config/ontologyapp/ontology.properties" overwrite="true"/>
        <copy file="${ant.installdata.dir}/jboss_config/ontologyapp/OntologyApplicationContext.xml.orig" tofile="${ant.installdata.dir}/jboss_config/ontologyapp/OntologyApplicationContext.xml" overwrite="true"/>

        <copy file="${ant.installdata.dir}/jboss_config/workplaceapp/workplace.properties.orig" tofile="${ant.installdata.dir}/jboss_config/workplaceapp/workplace.properties" overwrite="true"/>
    </target> 
    <target name="change_properties" depends="copy_files">
        <replace dir="${ant.installdata.dir}/" value="" failOnNoReplacements="true">
            <exclude name="build.properties"/>
            <exclude name="**/*.orig"/>
            <exclude name="i2b2_src/*"/>
            <include name="**/db.properties"/>
            <include name="**/scripts/create_POSTGRESQL_users.sql"/>
            <include name="**/scripts/workplace_access_insert_data.sql"/>
            <include name="**/*-ds.xml"/>
            <include name="**/crcapp/*"/>
            <include name="**/ontologyapp/*"/>
            <include name="**/workplaceapp/*"/>

            <replacefilter token="${db.DBTYPE}" value="${db.type}"/>
            <replacefilter token="${db.DBTYPENAME}" value="${db.type.name}"/>
            <replacefilter token="${db.DBPROJECT}" value="${db.project}"/>
            <replacefilter token="${db.DBPROJECTNAME}" value="${db.project.name}"/>
            <replacefilter token="${db.DBNAME}" value="${db.name}"/>
            <replacefilter token="${db.SERVERURL}" value="${db.server}"/>
            <replacefilter token="${db.DBDRIVER}" value="${db.driver}"/>
            <replacefilter token="${db.DBDRIVERJAR}" value="${db.driver.jar}"/>
            <replacefilter token="${db.DBURL}" value="${db.url}"/>
            <replacefilter token="${db.DBUSER}" value="${db.username}"/>
            <replacefilter token="${db.DBPWD}" value="${db.password}"/>

            <replacefilter token="${db.HIVEUSER}" value="${db.hive.user}"/>
            <replacefilter token="${db.HIVEPWD}" value="${db.hive.pwd}"/>
            <replacefilter token="${db.PMUSER}" value="${db.pm.user}"/>
            <replacefilter token="${db.PMPWD}" value="${db.pm.pwd}"/>
            <replacefilter token="${db.WORKUSER}" value="${db.work.user}"/>
            <replacefilter token="${db.WORKPWD}" value="${db.work.pwd}"/>
            <replacefilter token="${db.METAUSER}" value="${db.meta.user}"/>
            <replacefilter token="${db.METAPWD}" value="${db.meta.pwd}"/>
            <replacefilter token="${db.DEMOUSER}" value="${db.crc.user}"/>
            <replacefilter token="${db.DEMOPWD}" value="${db.crc.pwd}"/>
        </replace>
    </target>  
    <target name="deploy_jboss" depends="unzip_jboss, unzip_i2b2, unpack_i2b2_deploy_config">
        <copy file="${packages.dir}/postgresql-9.2-1002.jdbc4.jar" todir="${jboss.home}/standalone/deployments" />
    </target>
    <target name="unzip_i2b2" >
        <delete dir="${i2b2.src.dir}" quiet="true"/>
        <mkdir dir="${i2b2.src.dir}" />
        <unzip src="${packages.dir}/i2b2core-src-${i2b2.version}.zip" dest="${i2b2.src.dir}">
            <patternset>
                <include name="admin/**"/>
            </patternset>
        </unzip>
        <unzip src="${packages.dir}/i2b2createdb-${i2b2.version}.zip" dest="${i2b2.src.dir}">
            <patternset>
                <include name="**/NewInstall/**"/>
                <exclude name="**/NewInstall/*.jar"/>
                <exclude name="**/NewInstall/Imdata/**"/>
                <exclude name="**/NewInstall/Metadata/demo/**"/>
                <exclude name="**/NewInstall/Crcdata/scripts/oracle/**"/>
                <exclude name="**/NewInstall/Crcdata/scripts/sqlserver/**"/>
                <exclude name="**/NewInstall/Crcdata/scripts/postgresql/**"/>    
                <exclude name="**/NewInstall/Crcdata/scripts/expression_obs_demo_insert_data.sql"/>                   
            </patternset>
        </unzip>
        <unzip src="${packages.dir}/i2b2webclient-${i2b2.version}.zip" dest="${i2b2.src.dir}"/>

        <copy file="${i2b2.src.dir}/webclient/i2b2_config_data.js" tofile="${i2b2.src.dir}/webclient/i2b2_config_data.js.orig"/>
        <replace file="${i2b2.src.dir}/webclient/i2b2_config_data.js">
            <replacefilter token="allowAnalysis: false" value="allowAnalysis: true"/>
            <replacefilter token="isSHRINE: true" value="isSHRINE: false"/>
            <replacefilter token="debug: false" value="debug: true"/>
            <replacefilter token="HarvardDemo" value="${db.hive.id}"/>
            <replacefilter token="i2b2demo" value="${db.hive.id}"/>
            <replacefilter token="webservices.i2b2.org" value="${ip.addr}:9090"/>
            <replacefilter token="services.i2b2.org" value="${ip.addr}:9090"/>
            <replacefilter token="rest" value="services"/>
        </replace>   

        <copy file="${i2b2.src.dir}/admin/i2b2_config_data.js" tofile="${i2b2.src.dir}/admin/i2b2_config_data.js.orig"/>
        <replace file="${i2b2.src.dir}/admin/i2b2_config_data.js">
            <replacefilter token="HarvardDemo" value="${db.hive.id}"/>
            <replacefilter token="webservices.i2b2.org" value="${ip.addr}:9090"/>
        </replace>   

        <mkdir dir="${web.html.dir}" />
        <copy todir="${web.html.dir}/admin">
            <fileset dir="${i2b2.src.dir}/admin"/>
        </copy>
        <copy todir="${web.html.dir}/webclient">
            <fileset dir="${i2b2.src.dir}/webclient"/>
        </copy>
    </target>

    <target name="unpack_i2b2_deploy_config" depends="unzip_jboss, change_properties">
        <delete dir="${jboss.home}/standalone/deployments/${axis2.war.name}" quiet="true"/>
        <mkdir dir="${jboss.home}/standalone/deployments/${axis2.war.name}"/>
        <touch file="${jboss.home}/standalone/deployments/${axis2.war.name}.dodeploy"/>

        <!--unpack axis2 war-->
        <mkdir dir="${packages.dir}/tmp"/>
        <unzip src="${packages.dir}/${axis2.zip.name}" dest="${packages.dir}/tmp"/>
        <unwar src="${packages.dir}/tmp/axis2.war" dest="${jboss.home}/standalone/deployments/${axis2.war.name}"/>
        <delete dir="${packages.dir}/tmp"/>

        <!--unpack built i2b2-->
        <!--unzip src="${packages.dir}/jboss-configuration-slim.zip" dest="${jboss.home}/standalone/" /-->
        <!--unzip src="${packages.dir}/jboss-deployment-xml.zip" dest="${jboss.home}/standalone/deployments" /-->
        <unzip src="${packages.dir}/${axis2.patch.zip.name}" dest="${jboss.home}/standalone/deployments/${axis2.war.name}" />
        <copy todir="${jboss.home}/standalone/configuration">
            <fileset dir="${ant.installdata.dir}/jboss_config/"/>
        </copy>
        <copy todir="${jboss.home}/standalone/deployments">
            <fileset dir="${ant.installdata.dir}/jboss_xml_ds/"/>
        </copy>

        <copy file="${jboss.home}/bin/appclient.conf" tofile="${jboss.home}/bin/appclient.conf.orig"/>
        <replace file="${jboss.home}/bin/appclient.conf">
            <!--Memory settings:-->
            <replacefilter token="-Xms64m -Xmx512m" value="-Xms512m -Xmx1024m"/>
        </replace>   

        <copy file="${jboss.home}/standalone/configuration/standalone.xml" tofile="${jboss.home}/standalone/configuration/standalone.xml.orig"/>    
        <replace file="${jboss.home}/standalone/configuration/standalone.xml">
		<!--Binding JBoss AS 7 to all interfaces:-->
		<replacefilter token="&lt;inet-address value=&quot;$${jboss.bind.address:127.0.0.1}&quot;/&gt;" value="&lt;any-address/&gt;"/>
        </replace>
    </target>
    <target name="unzip_jboss" depends="jboss_exists" unless="${jboss.dir.exist}">
        <echo message="unzip jboss"/>
        <unzip src="${packages.dir}/${jboss.zip.name}" dest="${app.base.dir}" />
        <chmod dir="${jboss.home}/bin" perm="ugo+rx" includes="**/*.sh"/>
    </target>
    <target name="jboss_exists">
        <available file="${jboss.home}" type="dir" property="jboss.dir.exist"/>
        <echo message="${jboss.dir.exist}"/>
    </target>


    <!-- =================================================================== -->
    <!--    DB Users                                                         -->
    <!-- =================================================================== -->
    <target name="change_psql_user_password" depends="init">
        <echo message="change psql user password"/>
        <echo message="${db.password}"/>
        <!-- sql driver="${db.driver}" url="jdbc:postgresql://localhost:5432/" userid="${db.username}" password="" classpathref="classpath" onerror="continue" print="true" autocommit="true">
            <transaction>
                alter user ${db.username} with password '${db.password}';
            </transaction>
        </sql-->
        <exec executable="sudo" inputstring="alter user ${db.username} with password '${db.password}';&#10;">
            <arg line="-u postgres psql -f -" />
        </exec>
    </target>    
    <target name="i2b2_db_create" depends="init">
        <echo message="create db i2b2"/>
        <sql driver="${db.driver}" url="jdbc:postgresql://localhost:5432/" userid="${db.username}" password="${db.password}" classpathref="classpath" onerror="continue" print="true" autocommit="true">
            CREATE DATABASE ${db.name};
        </sql>
    </target>
    <target name="user_create" depends="init">
        <echo message="database users"/>
        <ant antfile="${ant.installdata.dir}/${dbuser.dir}/init_build.xml" target="create_POSTGRESQL_users" output="${log.dir}/user_create.log" inheritAll="false" useNativeBasedir="true"/>
    </target>
    <!-- =================================================================== -->
    <target name="i2b2_db_delete" depends="init" description="drop user Database">
        <sql driver="${db.driver}" url="jdbc:postgresql://localhost:5432/" userid="${db.username}" password="${db.password}" classpathref="classpath" onerror="continue" print="true" autocommit="true">
                DROP DATABASE ${db.name};
        </sql>
    </target>
    <target name="user_delete" depends="init" description="drop user">
        <echo message="${dbuser.dir}"/>
        <ant antfile="${ant.installdata.dir}/${dbuser.dir}/init_build.xml" target="drop_POSTGRESQL_users" output="${log.dir}/user_delete.log" inheritAll="false" useNativeBasedir="true"/>
    </target>
    <target name="reset_psql_user_password" depends="init" description="reset user password">
        <sql driver="${db.driver}" url="${db.url}" userid="${db.username}" password="${db.password}" classpathref="classpath" onerror="continue" print="true">
            <transaction>
                alter user ${db.username} with password '';
            </transaction>
        </sql>
    </target>


    <!-- =================================================================== -->
    <!--    HIVE Database                                                    -->
    <!-- =================================================================== -->
    <target name="hive_create" depends="init" description="init HIVE Database">
        <echo message="hive: create"/>
        <copy file="${ant.installdata.dir}/${hive.dir}/db.properties"  overwrite="true" todir="${ant.i2b2.data.dir}/Hivedata"/>
        <ant antfile="${ant.i2b2.data.dir}/Hivedata/data_build.xml" target="create_hivedata_tables_release_1-7" output="${log.dir}/hive_create.log" inheritAll="false" useNativeBasedir="true"/>
        <ant antfile="${ant.i2b2.data.dir}/Hivedata/data_build.xml" target="db_hivedata_load_data" output="${log.dir}/hive_load.log" inheritAll="false" useNativeBasedir="true"/>
        <echo message="hive: update"/>
        <ant antfile="${ant.installdata.dir}/${hive.dir}/change_build.xml" target="update_hive" output="${log.dir}/hive_update.log" inheritAll="false" useNativeBasedir="true"/>
    </target>
    <!-- =================================================================== -->
    <target name="hive_delete" depends="init" description="drop HIVE Database">
        <ant antfile="${ant.installdata.dir}/${hive.dir}/change_build.xml" target="drop_hive" output="${log.dir}/hive_delete.log" inheritAll="false" useNativeBasedir="true"/>
    </target>

    <!-- =================================================================== -->
    <!--    PM Database                                                      -->
    <!-- =================================================================== -->
	<target name="pm_create" depends="init" description="init PM Database">
        <echo message="pm: create"/>
        <copy file="${ant.installdata.dir}/${pm.dir}/db.properties" todir="${ant.i2b2.data.dir}/Pmdata" overwrite="true"/>
        <ant antfile="${ant.i2b2.data.dir}/Pmdata/data_build.xml" target="create_pmdata_tables_release_1-7" output="${log.dir}/pm_create.log" inheritAll="false" useNativeBasedir="true"/>
        <ant antfile="${ant.i2b2.data.dir}/Pmdata/data_build.xml" target="create_triggers_release_1-7" output="${log.dir}/pm_create_triggers.log" inheritAll="false" useNativeBasedir="true"/>
        <ant antfile="${ant.i2b2.data.dir}/Pmdata/data_build.xml" target="db_pmdata_load_data" output="${log.dir}/pm_load.log" inheritAll="false" useNativeBasedir="true"/>
    </target>
    <!-- =================================================================== -->
    <target name="pm_delete" depends="init" description="drop PM Database">
        <ant antfile="${ant.installdata.dir}/${pm.dir}/change_build.xml" target="drop_pm" output="${log.dir}/pm_delete.log" inheritAll="false" useNativeBasedir="true"/>
    </target>

    <!-- =================================================================== -->
    <!--    WORK Database                                                    -->
    <!-- =================================================================== -->
    <target name="workdata_create" depends="init" description="init WORK Database">
        <echo message="work: create"/>
        <copy file="${ant.installdata.dir}/${work.dir}/db.properties" todir="${ant.i2b2.data.dir}/Workdata" overwrite="true"/>
        <ant antfile="${ant.i2b2.data.dir}/Workdata/data_build.xml" target="create_workdata_tables_release_1-7" output="${log.dir}/work_create.log" inheritAll="false" useNativeBasedir="true"/>               
        <ant antfile="${ant.installdata.dir}/${work.dir}/change_build.xml" target="insert_work_access" output="${log.dir}/work_load.log" inheritAll="false" useNativeBasedir="true"/>
        <!-- ant antfile="${ant.i2b2.data.dir}/Workdata/data_build.xml" target="db_workdata_load_data" output="${log.dir}/work_load.log" inheritAll="false" useNativeBasedir="true"/-->
    </target>
    <!-- =================================================================== -->
    <target name="workdata_delete" depends="init" description="drop WORK Database">
        <ant antfile="${ant.installdata.dir}/${work.dir}/change_build.xml" target="drop_work" output="${log.dir}/work_delete.log" inheritAll="false" useNativeBasedir="true"/>
    </target>

    <!-- =================================================================== -->
    <!--    META Database                                                    -->
    <!-- =================================================================== -->
    <target name="metadata_create" depends="init" description="init META Database">
        <echo message="meta: create"/>
        <copy file="${ant.installdata.dir}/${meta.dir}/db.properties" todir="${ant.i2b2.data.dir}/Metadata" overwrite="true"/>
        <ant antfile="${ant.i2b2.data.dir}/Metadata/data_build.xml" target="create_metadata_tables_release_1-7" output="${log.dir}/meta_create.log" inheritAll="false" useNativeBasedir="true"/>
        <!-- ant antfile="data_build.xml" dir="${ant.i2b2.data.dir}/Metadata/" target="db_metadata_load_data" output="${log.dir}/meta_load.log" inheritAll="false" useNativeBasedir="true"/-->
    </target>
    <!-- =================================================================== -->
    <target name="metadata_delete" depends="init" description="drop META Database">
        <ant antfile="${ant.installdata.dir}/${meta.dir}/change_build.xml" target="drop_meta" output="${log.dir}/meta_delete.log" inheritAll="false" useNativeBasedir="true"/>
    </target>

    <!-- =================================================================== -->
    <!--    CRC Database                                                    -->
    <!-- =================================================================== -->
    <target name="crcdata_create" depends="init" description="init CRC Database">
        <echo message="crc: create"/>
        <copy file="${ant.installdata.dir}/${crc.dir}/db.properties" todir="${ant.i2b2.data.dir}/Crcdata" overwrite="true"/>
        <ant antfile="${ant.i2b2.data.dir}/Crcdata/data_build.xml" target="create_crcdata_tables_release_1-7" output="${log.dir}/crc_create.log" inheritAll="false" useNativeBasedir="true"/>
        <!--ant antfile="${ant.i2b2.data.dir}/Crcdata/data_build.xml" target="db_crcdata_load_data" output="${log.dir}/crc_load.log" inheritAll="false" useNativeBasedir="true"/-->
    </target>
    <!-- =================================================================== -->
    <target name="crcdata_delete" depends="init" description="drop CRC Database">
        <ant antfile="${ant.installdata.dir}/${crc.dir}/change_build.xml" target="drop_crc" output="${log.dir}/crc_delete.log" inheritAll="false" useNativeBasedir="true"/>
    </target>

    <!-- =================================================================== -->
    <!--     build all                                                       -->
    <!-- =================================================================== -->
    <target name="create_tables" 
        depends="   
                    hive_create, 
                    pm_create,
                    workdata_create,
                    metadata_create,
                    crcdata_create" 
        description="call all create targets">
    </target>
    <target name="db_all" 
        depends="   change_properties, change_psql_user_password,
                    i2b2_db_create, user_create,
                    hive_create, 
                    pm_create,
                    workdata_create,
                    metadata_create,
                    crcdata_create" 
        description="call all create targets">
        <echo message="db all"/>
    </target>
    <target name="delete_db_all" 
        depends="   i2b2_db_delete, 
                    user_delete, 
                    reset_psql_user_password" 
        description="call all create targets">
        <echo message="delete db all"/>
    </target>

    <target name="all" depends="get_packages, deploy_jboss, db_all" />
</project>
