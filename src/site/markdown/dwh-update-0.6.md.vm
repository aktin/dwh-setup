Update des lokalen DWH
======================================

Diese Informationen richten sich an die Server-Administratoren, die für die Einrichtung bzw. Wartung der Linux-Server in den Kliniken zuständig sind, auf denen das AKTIN-Datawarehouse läuft.

Falls Sie einen Debian-Server nutzen, der anhand der Anleitung eingerichtet wurde, sollte das Update-Script bei Ihnen funktionieren. Bei individuell konfigurierten Servern oder anderen Linux-Distributionen führen Sie die einzelnen Schritte des Scripts bitte manuell durch und passen Sie ggf. die Pfade oder andere Besonderheiten entsprechend an.

Skriptbasiertes Update für Debian
---------------------------------
Für laufende DWH auf Debian Servern stellen wir eine Update-Skript bereit, zu finden unter 
[Debian Update Paket](${releaseRepoUrl}/org/aktin/dwh-update/${dwhServerVersion}/dwh-update-${dwhServerVersion}.tar.gz).
Für die Ausführung ist wichtig, dass der User als `root` angemeldet ist. 
Dazu führt man, falls der User auf der Sudoer-Liste steht (der User `root` hat dann meist kein eigenes Passwort), Folgendes aus:

```
sudo su
```
oder, wenn der User nicht auf der Sudoer-Liste steht (`root` hat eigenes Passwort), Folgendes:

```
su
```
Step-by-Step Anleitung zur Ausführung als `root`:

```
wget ${releaseRepoUrl}/org/aktin/dwh-update/${dwhServerVersion}/dwh-update-${dwhServerVersion}.tar.gz
tar xvzf dwh-update-${dwhServerVersion}.tar.gz
cd dwh-update
./aktin_dwh_update.sh
```

Zur Überprüfung, ob das Update erfolgreich war, können Sie folgende Liste durchgehen:

* Bei der Auflistung des Verzeichnisses `/opt/wildfly-9.0.2.Final/standalone/deployments/` finden Sie nun unter Anderem die folgende Auflistung:

```
ls /opt/wildfly-9.0.2.Final/standalone/deployments/
#dwh-j2ee-0.5-SNAPSHOT.ear
#dwh-j2ee-0.5-SNAPSHOT.ear.undeployed
#dwh-j2ee-${dwhImportVersion}.ear           
#dwh-j2ee-${dwhImportVersion}.ear.deployed 
```

* In der i2b2-Weboberfläche sind die Login-Felder nicht mehr vorausgefüllt. Sie können sich weiterhin mit den gewohnten Daten einloggen, nur die Formular-Vorbelegung mit den Standard-Benutzerdaten wurden entfernt. Falls Sie noch keinen eigenen Benutzer angelegt haben bzw. noch die Standard-Passwörter verwenden, sollten sie diese ändern. Gehen Sie dazu mit Ihrem Browser auf Ihren Server zur Webseite `/admin/` (bzw. ersetzen Sie "webclient" mit "admin" wenn Sie die i2b2-Anmeldemaske sehen). Die Standard-Zugangsdaten lauten hier i2b2/demouser - sie sollten das Passwort unbedingt ändern. Die Verwaltung der Benutzer unter dem Menüpunkt "Manage users" sollte selbsterklärend sein.

Ab diesem Zeitpunkt akzeptiert die AKTIN-Schnittstelle CDA Dokumente nach dem Release-Stand v1.21, nach V1 (Template-ID 1.2.276.0.76.10.1015) und V2 (Template-ID 1.2.276.0.76.10.1019)


Manuelles Update für Debian, CentOS oder andere Betriebssysteme
===============================================================

Anmelden als ROOT
-----------------

Für die Ausführung ist wichtig, dass der User als `root` angemeldet ist. 
Dazu führt man, falls der User auf der Sudoer-Liste steht (der User `root` hat dann meist kein eigenes Passwort), Folgendes aus:

```
sudo su
```
oder, wenn der User nicht auf der Sudoer-Liste steht (`root` hat eigenes Passwort), Folgendes:

```
su
```

Löschen der alten Software
--------------------------

Die alte Version muss aus dem Wildfly Service entfernt werden. Dies kann man z.B. mit den folgenden Befehlen erreichen, wobei `$WILDFLY_HOME` auf den Ordner verlinkt, wo beim ersten Installation Wildfly eingerichtet wurde, z.B. `WILDFLY_HOME=/opt/wildfly-9.0.2.Final`, dieser Befehl sollte als `root` ausgeführt werden:

```
$WILDFLY_HOME/bin/jboss-cli.sh -c --command="undeploy --name=dwh-j2ee-0.5-SNAPSHOT.ear"
```
Der Befehl war erfolgreich, wenn keine Fehlermeldung angezeigt wird und anschließend eine Datei `dwh-j2ee-0.5-SNAPSHOT.ear.undeployed` im gleichen Ordner erstellt wurde.

```
ls $WILDFLY_HOME/standalone/deployments/ | grep .ear.undeployed
#dwh-j2ee-0.5-SNAPSHOT.ear.undeployed
```

Nach dem Undeploy können Sie die beiden Dateien `dwh-j2ee-0.5-SNAPSHOT.ear` und `dwh-j2ee-0.5-SNAPSHOT.ear.undeployed` (in dieser Reihefolge) aus dem Verzeichnis `$WILDFLY_HOME/standalone/deployments/` löschen. (Das Löschen kann nur user mit `root` Rechten ausführen.) Das Löschen hat keine Auswirkung. 

```
rm $WILDFLY_HOME/standalone/deployments/dwh-j2ee-0.5-SNAPSHOT.ear*
```

Einbinden der neuen Software
----------------------------

Zuerst muss die neue EAR-Datei auf den Server geladen werden. Die benötigte EAR-Datei finden Sie unter [EAR Release ${dwhImportVersion}](${releaseRepoUrl}/org/aktin/dwh-j2ee/${dwhImportVersion}/dwh-j2ee-${dwhImportVersion}.ear). 

```
wget ${releaseRepoUrl}/org/aktin/dwh-j2ee/${dwhImportVersion}/dwh-j2ee-${dwhImportVersion}.ear
```
Danach kann man die neue EAR-Datei in das Deploymentverzeichnis 
unter `$WILDFLY_HOME/standalone/deployments` laden. 
`$install_root` ist hier der Pfad zu der heruntergeladenen Datei, 
z.B. das aktuelle Verzeichnis: `install_root=.` Dabei sollte man sicher stellen,
dass die betreffende Datei nicht bereits in dem Verzeichnis vorhanden ist. 
(`ls $WILDFLY_HOME/standalone/deployments | grep dwh-j2ee-${dwhImportVersion}.ear` ergibt leeres Ergebnis)

Folgenden Befehl sollte man per `sudo` oder als `root` ausführen. 

```
cp $install_root/dwh-j2ee-${dwhImportVersion}.ear $WILDFLY_HOME/standalone/deployments/dwh-j2ee-${dwhImportVersion}.ear   
```

Nach dem kopieren erscheint dann ein `dwh-j2ee-${dwhImportVersion}.ear.isdeploying` und nach 
einiger Zeit dann, bei erfolgreicher Deployment, `dwh-j2ee-${dwhImportVersion}.ear.deployed`.
Sollte eine Datei mit dem Namen `dwh-j2ee-${dwhImportVersion}.ear.failed` erscheinen,
wenden Sie sich bitte an uns (it-support@aktin.org).


```
ls $WILDFLY_HOME/standalone/deployments/ | grep dwh-j2ee-${dwhImportVersion}.ear
#dwh-j2ee-${dwhImportVersion}.ear
#dwh-j2ee-${dwhImportVersion}.ear.isdeploying
# wird nach einiger Zeit zu
#dwh-j2ee-${dwhImportVersion}.ear.deployed
# oder im Falle eines Fehlers 
#dwh-j2ee-${dwhImportVersion}.ear.failed
```

Datenbank-Reset
---------------
Für das Zurücksetzen der Postgres-Datenbank kann man über die PSQL Konsole nagivieren. Dazu meldet man sich mit dem User an, der die benötigten Rechte hat  (z. B. `postgres`) und startet dann die `psql` Konsole.

```
su postgres
psql
```
In der `psql` kann man dann folgende Befehle zum Leeren der vier Tabellen ausführen (Achtung, es kommt keine weitere Abfrage!):

```
\connect i2b2
TRUNCATE i2b2crcdata.observation_fact, i2b2crcdata.patient_dimension, i2b2crcdata.visit_dimension, i2b2crcdata.patient_mapping, i2b2crcdata.encounter_mapping;
```

Mit folgenden Befehlen wird die `psql` Konsole geschlossen und der User `postgres` abgemeldet.

```
\q
exit
```

Einspielen der neuen Ontologie-Metadaten
----------------------------------------
Die neue Ontologie kann über das Paket [CDA-Ontology](@@@TODO GET LINK@@@) heruntergeladen werden:

```
wget ${releaseRepoUrl}/org/aktin/dwh-j2ee/${dwhImportVersion}/dwh-j2ee-${dwhImportVersion}.ear
```

Man sollte das Paket in einer temporären Verzeichnis entpacken und die enthaltene `sql` Skripte über den `postgres` User ausführen. Anschließend kann die temporäre Verzeichnis wieder gelöscht werden.

```
CDATMPDIR=/var/tmp/cda-ontology
unzip packages/cda-ontology-${project.dependencies[1].version}.jar -d $CDATMPDIR
chmod 777 -R $CDATMPDIR

su - postgres bash -c "psql -d i2b2 -f $CDATMPDIR/sql/meta.sql" 2>&1 >> update_sql.log
su - postgres bash -c "psql -d i2b2 -f $CDATMPDIR/sql/data.sql" 2>&1 >> update_sql.log

rm -r $CDATMPDIR
```

Neustart des Service
--------------------
Nun sollte der Wildfly Service neugestartet werden.

``` 
service wildfly restart
```

Damit ist das DWH bereit, neue Daten zu empfangen.

(Optional, empfohlen) Keine vorausgefüllten Benutzerdaten in i2b2
-----------------------------------------------------------------

Bei dem i2b2-Login-Formular sind standardmäßig Benutzerdaten des `demo`-Benutzters
voreingetragen. Um diesen Eintrag zu entfernen, gehen Sie vor wie folgt:

Hierbei ist `i2b2_WEBDIR` die i2b2 Webclient Verzeichnis, z.B. `i2b2_WEBDIR=/var/www/html/webclient`. 
Je nach Distribution und Installation kann dies auch `/var/www/webclient` oder ein anderes Verzeichnis sein.

Ändern Sie nun die Datei `$i2b2_WEBDIR/js-i2b2/cells/PM/PM_misc.js` mit einem Editor Ihrer Wahl (ggf. vorher ein Backup erstellen).

### ```
### cp $i2b2_WEBDIR/js-i2b2/cells/PM/PM_misc.js $i2b2_WEBDIR/js-i2b2/cells/PM/PM_misc.js.orig
### 
### sed -i "s/id=\"loginusr\" value=\"demo\"/id=\"loginusr\" value=\"\"/g" $i2b2_WEBDIR/js-i2b2/cells/PM/PM_misc.js
### sed -i "s/id=\"loginpass\" value=\"demouser\"/id=\"loginpass\" value=\"\"/g" $i2b2_WEBDIR/js-i2b2/cells/PM/PM_misc.js
### ```

In Zeile 123 bei loginusr das Feld `value="demo"` ändern in `value=""`.
Außerdem in Zeile 125 bei loginpass das Feld `value="demouser"` ändern in `value=""`.

(Optional) Zeitpunkt des Produktivstarts manuell festlegen
----------------------------------------------------------

Wenn der Import aus dem Notaufnahmesystem während des Updates schon läuft, bringt das zwei Nachteile mit sich: Erstens wird die (dringend angeratene) Umstellung auf Version 2 des CDA-Tremplates erst nach dem DWH-Update durchgeführt und somit in der Zwischenzeit weitere Version 1 CDAs importiert. Dies ist technisch kein Problem, aber ggf. unschön für eine Auswertung. Zweitens ist der Produktiv-Start (also Beginn der Datensammlung) dann der Zeitpunkt, zu dem das Script ausgeführt wurde. Auch hier möchte man ggf. einen definierten Startzeitpunkt (z.B. Montag 0:00 Uhr) wählen. Dies lässt sich am einfachsten realisieren, indem man nachträglich alle Daten löscht, die vor dem selbst gewählten Startdatum liegen. Dazu sind folgende manuellen Schritte in der Server-Konsole auszuführen (das Datum kann frei gewählt werden, sollte aber nicht in der Zukunft liegen, da sonst natürlich wieder der Ausführungs-Zeitpunkt und nicht der angegebene der effektive Produktiv-Start wird). Dazu sollte man sich als `root` angemeldet sein.

```
su postgres
psql

\connect i2b2
delete from i2b2crcdata.observation_fact where import_date < '2016-10-01 0:00';
delete from i2b2crcdata.encounter_mapping where import_date < '2016-10-01 0:00';
delete from i2b2crcdata.patient_mapping pm  where not exists(select null from i2b2crcdata.patient_dimension pd where  pm.patient_num=pd.patient_num and pd.update_date >= '2016-10-01 0:00');


delete from i2b2crcdata.patient_dimension where update_date < '2016-10-01 0:00';
delete from i2b2crcdata.visit_dimension where import_date < '2016-10-01 0:00';
\q
exit
service wildfly restart

```

(Optional) SMTP Einrichtung
----------------------------

Als Vorbereitung für spätere Funktionen kann man bereits die SMTP E-Mail Funktion einrichten. Dazu benötigt man eine (im Intranet erreichbare) E-Mail-Adresse bzw. Server. Das AKTIN-DWH verwendet keinen eigenen Mail-Server. Voraussetzung ist also ein Mail-Server, der (ggf. im Intranet) vom AKTIN-Server erreichbar ist und eine E-Mail-Adresse, die der Server verwenden kann um per SMTP Informations-Mails zu versenden. Sinnvoll wäre dazu eine dedizierte AKTIN-Service-Adresse einzurichten.

Um SMTP einzurichten, sollte man die folgenden Befehlen in der Konsole eingeben, wobei `$WILDFLY_HOME` wieder auf den Wildfly Ordner verlinkt und in den Variablen `smtphost`, `smtpport`, `smtpuser`, `smtppass` sollten die Einstellungen eingetragen werden. Folgende Befehle sollten als `root` ausgeführt werden.

```
smtphost=smtp.example.com
smtpport=465
smtpuser=user@example.com
smtppass=myPassword
usessl=true

sessionname="AktinMailSession"
jndiname="java:jboss/mail/AktinMailSession"
smtpbind="aktin-smtp-binding"

$WILDFLY_HOME/bin/jboss-cli.sh -c "/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=$smtpbind:add(host=$smtphost, port=$smtpport)"
$WILDFLY_HOME/bin/jboss-cli.sh -c "/subsystem=mail/mail-session=$sessionname:add(jndi-name=$jndiname)"
$WILDFLY_HOME/bin/jboss-cli.sh -c "/subsystem=mail/mail-session=$sessionname/server=smtp:add(outbound-socket-binding-ref=$smtpbind, username=$smtpuser, password=$smtppass, ssl=$usessl)"
$WILDFLY_HOME/bin/jboss-cli.sh -c ":reload"
```
Mit der letzten Zeile werden alle Wildfly Dienste gestoppt und neu gestartet. Nach kurzer Zeit sind die Funktionen wieder wie gewohnt aufrufbar. 

